
@depends(build_project)
def notjs_project(build_project):
    return build_project != 'js'

@imports('__sandbox__')
def conf(name, value):
    __sandbox__.set_config_impl(name, value)

def run_cmd(cmd, *args):
    return check_cmd_output(cmd, *args).rstrip()

def cmd_ver(cmd):
    return run_cmd(cmd, '--version')

@template
@imports('sys')
@imports('re')
def check_cmd(cmd, vercmd=cmd_ver, when=always):
    @depends_if(when)
    def check_func(when):
        if not when:
            return None
        res = find_program(cmd)
        if not res:
            log.error('*** %s command not found!' % cmd)
            sys.exit(1)
        info = cmd
        if vercmd:
            ver = vercmd(res)
            if ver:
                info += ' '
                info += str(ver)

        log.info('-- Found %s: %s' % (info, res))

        return res

    var = cmd.replace('-', '_').upper()
    var = re.sub('[^A-Z_]', '', var)
    conf(var, check_func)

    return check_func

# Graphite2
# ==============================================================
system_graphite2 = pkg_check_modules('MOZ_GRAPHITE2', 'graphite2 >= 3.0.1', when=notjs_project)
set_config('MOZ_GRAPHITE2', depends_if(system_graphite2)(lambda _: True))

# Protocol Buffers
# ==============================================================
system_protobuf = pkg_check_modules('MOZ_PROTOBUF', 'protobuf >= 3.5.0', when=notjs_project)
set_config('MOZ_PROTOBUF', depends_if(system_protobuf)(lambda _: True))
